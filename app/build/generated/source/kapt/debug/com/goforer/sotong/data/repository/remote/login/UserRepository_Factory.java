// Generated by Dagger (https://dagger.dev).
package com.goforer.sotong.data.repository.remote.login;

import com.goforer.sotong.data.datasource.model.dao.remote.profile.UserDao;
import com.goforer.sotong.data.datasource.network.rest.ServiceAPI;
import com.goforer.sotong.data.repository.BaseRepository_MembersInjector;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UserRepository_Factory implements Factory<UserRepository> {
  private final Provider<UserDao> daoProvider;

  private final Provider<ServiceAPI> serviceAPIProvider;

  public UserRepository_Factory(Provider<UserDao> daoProvider,
      Provider<ServiceAPI> serviceAPIProvider) {
    this.daoProvider = daoProvider;
    this.serviceAPIProvider = serviceAPIProvider;
  }

  @Override
  public UserRepository get() {
    UserRepository instance = new UserRepository(daoProvider.get());
    BaseRepository_MembersInjector.injectServiceAPI(instance, serviceAPIProvider.get());
    return instance;
  }

  public static UserRepository_Factory create(Provider<UserDao> daoProvider,
      Provider<ServiceAPI> serviceAPIProvider) {
    return new UserRepository_Factory(daoProvider, serviceAPIProvider);
  }

  public static UserRepository newInstance(UserDao dao) {
    return new UserRepository(dao);
  }
}

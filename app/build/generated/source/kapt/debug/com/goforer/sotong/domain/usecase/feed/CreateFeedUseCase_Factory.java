// Generated by Dagger (https://dagger.dev).
package com.goforer.sotong.domain.usecase.feed;

import com.goforer.sotong.data.repository.remote.feed.CreateFeedRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CreateFeedUseCase_Factory implements Factory<CreateFeedUseCase> {
  private final Provider<CreateFeedRepository> postingFeedRepositoryProvider;

  public CreateFeedUseCase_Factory(Provider<CreateFeedRepository> postingFeedRepositoryProvider) {
    this.postingFeedRepositoryProvider = postingFeedRepositoryProvider;
  }

  @Override
  public CreateFeedUseCase get() {
    return new CreateFeedUseCase(postingFeedRepositoryProvider.get());
  }

  public static CreateFeedUseCase_Factory create(
      Provider<CreateFeedRepository> postingFeedRepositoryProvider) {
    return new CreateFeedUseCase_Factory(postingFeedRepositoryProvider);
  }

  public static CreateFeedUseCase newInstance(CreateFeedRepository postingFeedRepository) {
    return new CreateFeedUseCase(postingFeedRepository);
  }
}

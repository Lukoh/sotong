// Generated by Dagger (https://dagger.dev).
package com.goforer.sotong.presentation.ui.profile.fragment;

import com.goforer.sotong.presentation.vm.feed.FeedViewModel;
import com.goforer.sotong.presentation.vm.login.UserViewModel;
import dagger.MembersInjector;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ProfileFragment_MembersInjector implements MembersInjector<ProfileFragment> {
  private final Provider<FeedViewModel> feedViewModelProvider;

  private final Provider<UserViewModel> userViewModelProvider;

  public ProfileFragment_MembersInjector(Provider<FeedViewModel> feedViewModelProvider,
      Provider<UserViewModel> userViewModelProvider) {
    this.feedViewModelProvider = feedViewModelProvider;
    this.userViewModelProvider = userViewModelProvider;
  }

  public static MembersInjector<ProfileFragment> create(
      Provider<FeedViewModel> feedViewModelProvider,
      Provider<UserViewModel> userViewModelProvider) {
    return new ProfileFragment_MembersInjector(feedViewModelProvider, userViewModelProvider);}

  @Override
  public void injectMembers(ProfileFragment instance) {
    injectFeedViewModel(instance, feedViewModelProvider.get());
    injectUserViewModel(instance, userViewModelProvider.get());
  }

  public static void injectFeedViewModel(ProfileFragment instance, FeedViewModel feedViewModel) {
    instance.feedViewModel = feedViewModel;
  }

  public static void injectUserViewModel(ProfileFragment instance, UserViewModel userViewModel) {
    instance.userViewModel = userViewModel;
  }
}

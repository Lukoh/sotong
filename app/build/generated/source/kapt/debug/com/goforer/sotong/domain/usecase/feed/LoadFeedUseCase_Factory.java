// Generated by Dagger (https://dagger.dev).
package com.goforer.sotong.domain.usecase.feed;

import com.goforer.sotong.data.repository.remote.feed.LoadFeedRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LoadFeedUseCase_Factory implements Factory<LoadFeedUseCase> {
  private final Provider<LoadFeedRepository> loadRepositoryProvider;

  public LoadFeedUseCase_Factory(Provider<LoadFeedRepository> loadRepositoryProvider) {
    this.loadRepositoryProvider = loadRepositoryProvider;
  }

  @Override
  public LoadFeedUseCase get() {
    return new LoadFeedUseCase(loadRepositoryProvider.get());
  }

  public static LoadFeedUseCase_Factory create(
      Provider<LoadFeedRepository> loadRepositoryProvider) {
    return new LoadFeedUseCase_Factory(loadRepositoryProvider);
  }

  public static LoadFeedUseCase newInstance(LoadFeedRepository loadRepository) {
    return new LoadFeedUseCase(loadRepository);
  }
}

// Generated by Dagger (https://dagger.dev).
package com.megazone.megatong.domain.usecase.login;

import com.megazone.megatong.data.repository.remote.login.UserRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UserUseCase_Factory implements Factory<UserUseCase> {
  private final Provider<UserRepository> repositoryProvider;

  public UserUseCase_Factory(Provider<UserRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public UserUseCase get() {
    return new UserUseCase(repositoryProvider.get());
  }

  public static UserUseCase_Factory create(Provider<UserRepository> repositoryProvider) {
    return new UserUseCase_Factory(repositoryProvider);
  }

  public static UserUseCase newInstance(UserRepository repository) {
    return new UserUseCase(repository);
  }
}

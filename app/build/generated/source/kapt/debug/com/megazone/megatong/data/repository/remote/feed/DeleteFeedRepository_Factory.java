// Generated by Dagger (https://dagger.dev).
package com.megazone.megatong.data.repository.remote.feed;

import com.megazone.megatong.data.datasource.model.dao.remote.feed.FeedDao;
import com.megazone.megatong.data.datasource.network.rest.ServiceAPI;
import com.megazone.megatong.data.repository.BaseRepository_MembersInjector;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DeleteFeedRepository_Factory implements Factory<DeleteFeedRepository> {
  private final Provider<FeedDao> daoProvider;

  private final Provider<ServiceAPI> serviceAPIProvider;

  public DeleteFeedRepository_Factory(Provider<FeedDao> daoProvider,
      Provider<ServiceAPI> serviceAPIProvider) {
    this.daoProvider = daoProvider;
    this.serviceAPIProvider = serviceAPIProvider;
  }

  @Override
  public DeleteFeedRepository get() {
    DeleteFeedRepository instance = new DeleteFeedRepository(daoProvider.get());
    BaseRepository_MembersInjector.injectServiceAPI(instance, serviceAPIProvider.get());
    return instance;
  }

  public static DeleteFeedRepository_Factory create(Provider<FeedDao> daoProvider,
      Provider<ServiceAPI> serviceAPIProvider) {
    return new DeleteFeedRepository_Factory(daoProvider, serviceAPIProvider);
  }

  public static DeleteFeedRepository newInstance(FeedDao dao) {
    return new DeleteFeedRepository(dao);
  }
}
